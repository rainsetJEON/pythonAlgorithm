### SELECT

#흉부외과 또는 일반외과 의사 목록 출력하기
SELECT DR_NAME, DR_ID, MCDP_CD, TO_CHAR(HIRE_YMD, 'YYYY-MM-DD') AS HIRE_YMD
FROM DOCTOR
WHERE MCDP_CD IN ('CS', 'GS')
ORDER BY HIRE_YMD DESC, DR_NAME ASC ;
# DOCTOR 테이블에서 진료과가 흉부외과(CS)이거나 일반외과(GS)인 의사의 이름, 의사ID, 진료과, 고용일자를 조회하는 SQL문을 작성해주세요. 이때 결과는 고용일자를 기준으로 내림차순 정렬하고, 고용일자가 같다면 이름을 기준으로 오름차순 정렬해주세요.

#3월에 태어난 여성 회원 목록 출력하기
SELECT MEMBER_ID, MEMBER_NAME, GENDER, TO_CHAR(DATE_OF_BIRTH, 'YYYY-MM-DD') AS DATE_OF_BIRTH
FROM MEMBER_PROFILE 
WHERE TO_CHAR(DATE_OF_BIRTH, 'MM') = '03'
AND TLNO IS NOT NULL
AND GENDER = 'W'
ORDER BY MEMBER_ID ASC;
# MEMBER_PROFILE 테이블에서 생일이 3월인 여성 회원의 ID, 이름, 성별, 생년월일을 조회하는 SQL문을 작성해주세요. 이때 전화번호가 NULL인 경우는 출력대상에서 제외시켜 주시고, 결과는 회원ID를 기준으로 오름차순 정렬해주세요.

#과일로 만든 아이스크림 고르기
-- 코드를 입력하세요
SELECT A.FLAVOR
FROM FIRST_HALF A, ICECREAM_INFO B
WHERE A.TOTAL_ORDER > 3000
AND B.INGREDIENT_TYPE = 'fruit_based'
AND A.FLAVOR = B.FLAVOR
ORDER BY A.TOTAL_ORDER DESC
# 상반기 아이스크림 총주문량이 3,000보다 높으면서 아이스크림의 주 성분이 과일인 아이스크림의 맛을 총주문량이 큰 순서대로 조회하는 SQL 문을 작성해주세요.
# 조인안하고 풀 때!

# 재구매가 일어난 상품과 회원 리스트 구하기
-- 코드를 입력하세요
SELECT USER_ID, PRODUCT_ID
FROM ONLINE_SALE
GROUP BY USER_ID, PRODUCT_ID
HAVING COUNT(*) > 1
ORDER BY USER_ID ASC, PRODUCT_ID DESC;
# USER_ID 가 1인 유저가 PRODUCT_ID 가 3, 4인 상품들을 재구매하고, USER_ID 가 2인 유저가 PRODUCT_ID 가 4인 상품을 재구매 하였으므로, 다음과 같이 결과가 나와야합니다.

#서울에 위치한 식당 목록 출력하기
SELECT A.REST_ID, 
       A.REST_NAME, 
       A.FOOD_TYPE, 
       A.FAVORITES, 
       A.ADDRESS, 
       ROUND(AVG(B.REVIEW_SCORE),2) as SCORE
FROM REST_INFO A 
INNER JOIN REST_REVIEW B
ON A.REST_ID = B.REST_ID
WHERE A.ADDRESS LIKE '서울%'
GROUP BY A.REST_ID, A.REST_NAME, A.FOOD_TYPE, A.FAVORITES, A.ADDRESS
ORDER BY SCORE DESC, A.FAVORITES DESC;
#REST_INFO와 REST_REVIEW 테이블에서 서울에 위치한 식당들의 식당 ID, 식당 이름, 음식 종류, 즐겨찾기수, 주소, 리뷰 평균 점수를 조회하는 SQL문을 작성해주세요. 이때 리뷰 평균점수는 소수점 세 번째 자리에서 반올림 해주시고 결과는 평균점수를 기준으로 내림차순 정렬해주시고, 평균점수가 같다면 즐겨찾기수를 기준으로 내림차순 정렬해주세요.


### SUM, MAX, MIN

#최댓값 구하기
SELECT DATETIME
FROM (
SELECT *
FROM ANIMAL_INS
ORDER BY DATETIME DESC
)
WHERE ROWNUM = 1
#또는
SELECT MAX(DATETIME)
FROM ANIMAL_INS

#한줄만 출력하고 싶을 때
SELECT *
FROM FOOD_PRODUCT 
ORDER BY PRICE DESC
FETCH FIRST 1 ROWS ONLY;

#중복제거
SELECT COUNT(DISTINCT NAME)
FROM ANIMAL_INS
#또는
SELECT COUNT(NAME)
FROM (SELECT DISTINCT NAME 
        FROM ANIMAL_INS);


### GROUP BY

#
SELECT INGREDIENT_TYPE, SUM(TOTAL_ORDER) AS TOTAL_ORDER
FROM FIRST_HALF
NATURAL JOIN ICECREAM_INFO
GROUP BY INGREDIENT_TYPE
ORDER BY TOTAL_ORDER ASC;

SELECT INGREDIENT_TYPE, SUM(TOTAL_ORDER) AS TOTAL_ORDER 
FROM FIRST_HALF A, ICECREAM_INFO B 
WHERE A.FLAVOR = B.FLAVOR 
GROUP BY INGREDIENT_TYPE ORDER BY TOTAL_ORDER ASC


#가격대 별 상품 개수 구하기
SELECT TRUNC(PRICE, -4) AS PRICE_GROUP, COUNT(PRODUCT_ID) AS PRODUCTS
FROM PRODUCT
GROUP BY TRUNC(PRICE, -4)
ORDER BY PRICE_GROUP ASC


SELECT TO_NUMBER(TO_CHAR(DATETIME, 'hh24')) AS HOUR,
       COUNT(*) AS COUNT
FROM ANIMAL_OUTS 
WHERE TO_NUMBER(TO_CHAR(DATETIME, 'hh24')) BETWEEN 9 AND 20
GROUP BY TO_NUMBER(TO_CHAR(DATETIME, 'hh24'))
ORDER BY HOUR ASC;

# 조건에 맞는 사용자와 총 거래금액 조회하기
SELECT USER_ID, NICKNAME, TOTAL_SALES
FROM (SELECT WRITER_ID, SUM(PRICE) AS TOTAL_SALES
    FROM USED_GOODS_BOARD
    WHERE STATUS = 'DONE'
    GROUP BY WRITER_ID) A, USED_GOODS_USER B
WHERE WRITER_ID = USER_ID
AND TOTAL_SALES >= 700000
ORDER BY TOTAL_SALES ASC
# 조인을 쓴다면?
SELECT USER_ID, NICKNAME, TOTAL_SALES
FROM USED_GOODS_USER A 
JOIN (SELECT WRITER_ID, SUM(PRICE) AS TOTAL_SALES
     FROM USED_GOODS_BOARD
     WHERE STATUS = 'DONE'
     GROUP BY WRITER_ID) B
ON WRITER_ID = USER_ID
WHERE TOTAL_SALES >= 700000
ORDER BY TOTAL_SALES ASC;